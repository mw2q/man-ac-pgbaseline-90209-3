BEGIN;
BEGIN
EXPLAIN
select
	s_name,
	s_address
from
	supplier,
	nation
where
	s_suppkey in (
		select
			distinct (ps_suppkey)
		from
			partsupp,
			part
		where
			ps_partkey=p_partkey
			and p_name like 'chocolate%'
			and ps_availqty > (
				select
					0.5 * sum(l_quantity)
				from
					lineitem
				where
					l_partkey = ps_partkey
					and l_suppkey = ps_suppkey
					and l_shipdate >= '1995-01-01'
					and l_shipdate < cast(date '1995-01-01' + interval '1 year' as date)
			)
	)
	and s_nationkey = n_nationkey
	and n_name = 'ALGERIA'
order by
	s_name;
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13888056.80..13888059.99 rows=1275 width=51)
   Sort Key: supplier.s_name
   ->  Hash Semi Join  (cost=13883522.49..13887991.03 rows=1275 width=51)
         Hash Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
         ->  Nested Loop  (cost=0.00..4430.31 rows=4000 width=55)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                     Filter: (n_name = 'ALGERIA'::bpchar)
               ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=59)
         ->  Hash  (cost=13883124.11..13883124.11 rows=31871 width=4)
               ->  HashAggregate  (cost=13882486.69..13882805.40 rows=31871 width=4)
                     ->  Nested Loop  (cost=0.00..13882407.01 rows=31871 width=4)
                           ->  Seq Scan on part  (cost=0.00..65522.00 rows=24024 width=4)
                                 Filter: ((p_name)::text ~~ 'chocolate%'::text)
                           ->  Index Scan using pk_partsupp on partsupp  (cost=0.00..575.12 rows=1 width=8)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::double precision > (SubPlan 1))
                                 SubPlan 1
                                   ->  Aggregate  (cost=140.92..140.93 rows=1 width=4)
                                         ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.92 rows=1 width=4)
                                               Index Cond: (l_partkey = partsupp.ps_partkey)
                                               Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate < '1996-01-01'::date) AND (l_suppkey = partsupp.ps_suppkey))
(22 rows)

COMMIT;
COMMIT
